<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="63" tests="159" time="0.0">
	<testsuite disabled="0" errors="0" failures="63" name="terraform scan" skipped="0" tests="159" time="0">
		<properties>
			<property name="directory" value="['.']"/>
			<property name="add_check" value="False"/>
			<property name="list" value="False"/>
			<property name="output" value="['junitxml']"/>
			<property name="output_file_path" value="results_junitxml.xml"/>
			<property name="output_bc_ids" value="False"/>
			<property name="include_all_checkov_policies" value="True"/>
			<property name="quiet" value="False"/>
			<property name="compact" value="False"/>
			<property name="framework" value="['all']"/>
			<property name="skip_framework" value="[]"/>
			<property name="run_all_external_checks" value="False"/>
			<property name="soft_fail" value="False"/>
			<property name="skip_results_upload" value="False"/>
			<property name="repo_id" value="cli_repo/Terraform"/>
			<property name="branch" value="master"/>
			<property name="skip_download" value="False"/>
			<property name="use_enforcement_rules" value="False"/>
			<property name="external_modules_download_path" value=".external_modules"/>
			<property name="evaluate_variables" value="True"/>
			<property name="no_cert_verify" value="False"/>
			<property name="create_baseline" value="False"/>
			<property name="output_baseline_as_skipped" value="False"/>
			<property name="secrets_scan_file_type" value="[]"/>
			<property name="enable_secret_scan_all_files" value="False"/>
			<property name="block_list_secret_scan" value="[]"/>
			<property name="summary_position" value="top"/>
			<property name="skip_resources_without_violations" value="False"/>
			<property name="deep_analysis" value="False"/>
			<property name="no_fail_on_crash" value="False"/>
			<property name="mask" value="defaultdict(&lt;class 'set'&gt;, {})"/>
			<property name="scan_secrets_history" value="False"/>
			<property name="secrets_history_timeout" value="12h"/>
			<property name="custom_tool_name" value="Checkov"/>
		</properties>
		<testcase name="[NONE][CKV_AWS_41] Ensure no hard coded AWS access key and secret key exists in provider" classname="\environments\develop\providers.tf.aws.default" file="\environments\develop\providers.tf"/>
		<testcase name="[NONE][CKV_AWS_41] Ensure no hard coded AWS access key and secret key exists in provider" classname="\environments\production\providers.tf.aws.default" file="\environments\production\providers.tf"/>
		<testcase name="[NONE][CKV_AWS_1] Ensure IAM policies that allow full &quot;*-*&quot; administrative privileges are not created" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_358] Ensure AWS GitHub Actions OIDC authorization policies only allow safe claims and claim order" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_107] Ensure IAM policies does not allow credentials exposure" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_108] Ensure IAM policies does not allow data exfiltration" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_109] Ensure IAM policies does not allow permissions management / resource exposure without constraints" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_110] Ensure IAM policies does not allow privilege escalation" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_283] Ensure no IAM policies documents allow ALL or any AWS principal permissions to the resource" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_111] Ensure IAM policies does not allow write access without constraints" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_356] Ensure no IAM policies documents allow &quot;*&quot; as a statement's resource for restrictable actions" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_49] Ensure no IAM policies documents allow &quot;*&quot; as a statement's actions" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_93] Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_s3_bucket_policy.frontend_policy" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_305] Ensure CloudFront distribution has a default root object configured" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_216] Ensure CloudFront distribution is enabled" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_34] Ensure CloudFront distribution ViewerProtocolPolicy is set to HTTPS" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\modules\cloudfront\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_319] Ensure that CloudWatch alarm actions are enabled" classname="\modules\cloudwatch\cloudwatch.tf.module.cloudwatch.aws_cloudwatch_metric_alarm.ec2_cpu" file="\modules\cloudwatch\cloudwatch.tf"/>
		<testcase name="[NONE][CKV_AWS_319] Ensure that CloudWatch alarm actions are enabled" classname="\modules\cloudwatch\cloudwatch.tf.module.cloudwatch.aws_cloudwatch_metric_alarm.ec2_memory" file="\modules\cloudwatch\cloudwatch.tf"/>
		<testcase name="[NONE][CKV_AWS_46] Ensure no hard-coded secrets exist in EC2 user data" classname="\modules\ec2\ec2.tf.module.ec2.aws_instance.ec2_ubuntu_docker" file="\modules\ec2\ec2.tf"/>
		<testcase name="[NONE][CKV_AWS_88] EC2 instance should not have public IP." classname="\modules\ec2\ec2.tf.module.ec2.aws_instance.ec2_ubuntu_docker" file="\modules\ec2\ec2.tf"/>
		<testcase name="[NONE][CKV_AWS_328] Ensure that ALB is configured with defensive or strictest desync mitigation mode" classname="\modules\elb\elb.tf.module.alb.aws_lb.app_alb" file="\modules\elb\elb.tf"/>
		<testcase name="[NONE][CKV_AWS_261] Ensure HTTP HTTPS Target group defines Healthcheck" classname="\modules\elb\elb.tf.module.alb.aws_lb_target_group.tg" file="\modules\elb\elb.tf"/>
		<testcase name="[NONE][CKV_AWS_261] Ensure HTTP HTTPS Target group defines Healthcheck" classname="\modules\elb\elb.tf.module.alb.aws_lb_target_group.tg_auth" file="\modules\elb\elb.tf"/>
		<testcase name="[NONE][CKV_AWS_261] Ensure HTTP HTTPS Target group defines Healthcheck" classname="\modules\elb\elb.tf.module.alb.aws_lb_target_group.tg_user" file="\modules\elb\elb.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="\modules\iam\cloudwatch_role.tf.module.iam.aws_iam_role.cloudwatch_agent" file="\modules\iam\cloudwatch_role.tf"/>
		<testcase name="[NONE][CKV_AWS_61] Ensure AWS IAM policy does not allow assume role permission across all services" classname="\modules\iam\cloudwatch_role.tf.module.iam.aws_iam_role.cloudwatch_agent" file="\modules\iam\cloudwatch_role.tf"/>
		<testcase name="[NONE][CKV_AWS_60] Ensure IAM role allows only specific services or principals to assume it" classname="\modules\iam\cloudwatch_role.tf.module.iam.aws_iam_role.cloudwatch_agent" file="\modules\iam\cloudwatch_role.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="\modules\iam\cloudwatch_role.tf.module.iam.aws_iam_role_policy_attachment.cloudwatch_agent" file="\modules\iam\cloudwatch_role.tf"/>
		<testcase name="[NONE][CKV_AWS_133] Ensure that RDS instances has backup policy" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf"/>
		<testcase name="[NONE][CKV_AWS_211] Ensure RDS uses a modern CaCert" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf"/>
		<testcase name="[NONE][CKV_AWS_354] Ensure RDS Performance Insights are encrypted using KMS CMKs" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf"/>
		<testcase name="[NONE][CKV_AWS_17] Ensure all data stored in RDS is not publicly accessible" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf"/>
		<testcase name="[NONE][CKV_AWS_388] Ensure AWS Aurora PostgreSQL is not exposed to local file read vulnerability" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf"/>
		<testcase name="[NONE][CKV_AWS_133] Ensure that RDS instances has backup policy" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf"/>
		<testcase name="[NONE][CKV_AWS_211] Ensure RDS uses a modern CaCert" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf"/>
		<testcase name="[NONE][CKV_AWS_354] Ensure RDS Performance Insights are encrypted using KMS CMKs" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf"/>
		<testcase name="[NONE][CKV_AWS_17] Ensure all data stored in RDS is not publicly accessible" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf"/>
		<testcase name="[NONE][CKV_AWS_388] Ensure AWS Aurora PostgreSQL is not exposed to local file read vulnerability" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf"/>
		<testcase name="[NONE][CKV_AWS_300] Ensure S3 lifecycle configuration sets period for aborting failed uploads" classname="\modules\s3\lifecycle.tf.module.s3.aws_s3_bucket_lifecycle_configuration.frontend" file="\modules\s3\lifecycle.tf"/>
		<testcase name="[NONE][CKV_AWS_300] Ensure S3 lifecycle configuration sets period for aborting failed uploads" classname="\modules\s3\lifecycle.tf.module.s3.aws_s3_bucket_lifecycle_configuration.frontend_logs" file="\modules\s3\lifecycle.tf"/>
		<testcase name="[NONE][CKV_AWS_300] Ensure S3 lifecycle configuration sets period for aborting failed uploads" classname="\modules\s3\lifecycle.tf.module.s3.aws_s3_bucket_lifecycle_configuration.frontend_replica" file="\modules\s3\lifecycle.tf"/>
		<testcase name="[NONE][CKV_AWS_53] Ensure S3 bucket has block public ACLS enabled" classname="\modules\s3\replication.tf.module.s3.aws_s3_bucket_public_access_block.frontend_logs_block" file="\modules\s3\replication.tf"/>
		<testcase name="[NONE][CKV_AWS_54] Ensure S3 bucket has block public policy enabled" classname="\modules\s3\replication.tf.module.s3.aws_s3_bucket_public_access_block.frontend_logs_block" file="\modules\s3\replication.tf"/>
		<testcase name="[NONE][CKV_AWS_55] Ensure S3 bucket has ignore public ACLs enabled" classname="\modules\s3\replication.tf.module.s3.aws_s3_bucket_public_access_block.frontend_logs_block" file="\modules\s3\replication.tf"/>
		<testcase name="[NONE][CKV_AWS_56] Ensure S3 bucket has 'restrict_public_buckets' enabled" classname="\modules\s3\replication.tf.module.s3.aws_s3_bucket_public_access_block.frontend_logs_block" file="\modules\s3\replication.tf"/>
		<testcase name="[NONE][CKV_AWS_53] Ensure S3 bucket has block public ACLS enabled" classname="\modules\s3\replication.tf.module.s3.aws_s3_bucket_public_access_block.frontend_replica_block" file="\modules\s3\replication.tf"/>
		<testcase name="[NONE][CKV_AWS_54] Ensure S3 bucket has block public policy enabled" classname="\modules\s3\replication.tf.module.s3.aws_s3_bucket_public_access_block.frontend_replica_block" file="\modules\s3\replication.tf"/>
		<testcase name="[NONE][CKV_AWS_55] Ensure S3 bucket has ignore public ACLs enabled" classname="\modules\s3\replication.tf.module.s3.aws_s3_bucket_public_access_block.frontend_replica_block" file="\modules\s3\replication.tf"/>
		<testcase name="[NONE][CKV_AWS_56] Ensure S3 bucket has 'restrict_public_buckets' enabled" classname="\modules\s3\replication.tf.module.s3.aws_s3_bucket_public_access_block.frontend_replica_block" file="\modules\s3\replication.tf"/>
		<testcase name="[NONE][CKV_AWS_93] Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)" classname="\modules\s3\s3.tf.module.s3.aws_s3_bucket.frontend" file="\modules\s3\s3.tf"/>
		<testcase name="[NONE][CKV_AWS_53] Ensure S3 bucket has block public ACLS enabled" classname="\modules\s3\s3.tf.module.s3.aws_s3_bucket_public_access_block.frontend" file="\modules\s3\s3.tf"/>
		<testcase name="[NONE][CKV_AWS_54] Ensure S3 bucket has block public policy enabled" classname="\modules\s3\s3.tf.module.s3.aws_s3_bucket_public_access_block.frontend" file="\modules\s3\s3.tf"/>
		<testcase name="[NONE][CKV_AWS_55] Ensure S3 bucket has ignore public ACLs enabled" classname="\modules\s3\s3.tf.module.s3.aws_s3_bucket_public_access_block.frontend" file="\modules\s3\s3.tf"/>
		<testcase name="[NONE][CKV_AWS_56] Ensure S3 bucket has 'restrict_public_buckets' enabled" classname="\modules\s3\s3.tf.module.s3.aws_s3_bucket_public_access_block.frontend" file="\modules\s3\s3.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="\modules\security\security.tf.module.security.aws_security_group.ec2_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="\modules\security\security.tf.module.security.aws_security_group.ec2_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="\modules\security\security.tf.module.security.aws_security_group.rds_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="\modules\security\security.tf.module.security.aws_security_group.rds_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="\modules\security\security.tf.module.security.aws_security_group.rds_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="\modules\security\security.tf.module.security.aws_security_group.rds_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="\modules\security\security.tf.module.security.aws_security_group.ssh_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="\modules\security\security.tf.module.security.aws_security_group.ssh_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="\modules\security\security.tf.module.security.aws_security_group.ssh_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="\modules\security\security.tf.module.security.aws_security_group.ssh_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="\modules\security\security.tf.module.security.aws_security_group.alb_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="\modules\security\security.tf.module.security.aws_security_group.alb_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="\modules\security\security.tf.module.security.aws_security_group.alb_sg" file="\modules\security\security.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="\modules\vpc\vpc.tf.module.vpc.aws_subnet.private[0]" file="\modules\vpc\vpc.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="\modules\vpc\vpc.tf.module.vpc.aws_subnet.private[1]" file="\modules\vpc\vpc.tf"/>
		<testcase name="[NONE][CKV2_AWS_77] Ensure AWS API Gateway Rest API attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability" classname="\api_gateway.tf.module.api_gateway.aws_apigatewayv2_api.http_api" file="\api_gateway.tf"/>
		<testcase name="[NONE][CKV2_AWS_35] AWS NAT Gateways should be utilized for the default route" classname="\vpc.tf.module.vpc.aws_route_table.private" file="\vpc.tf"/>
		<testcase name="[NONE][CKV2_AWS_35] AWS NAT Gateways should be utilized for the default route" classname="\vpc.tf.module.vpc.aws_route_table.public" file="\vpc.tf"/>
		<testcase name="[NONE][CKV2_AWS_72] Ensure AWS CloudFront origin protocol policy enforces HTTPS-only" classname="\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\cloudfront.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="\cloudwatch_role.tf.module.iam.aws_iam_role.cloudwatch_agent" file="\cloudwatch_role.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="\cloudwatch_role.tf.module.iam.aws_iam_role_policy_attachment.cloudwatch_agent" file="\cloudwatch_role.tf"/>
		<testcase name="[NONE][CKV2_AWS_74] Ensure AWS Load Balancers use strong ciphers" classname="\elb.tf.module.alb.aws_lb_listener.http_listener" file="\elb.tf"/>
		<testcase name="[NONE][CKV2_AWS_69] Ensure AWS RDS database instance configured with encryption in transit" classname="\rds.tf.module.rds.aws_db_instance.auth_db" file="\rds.tf"/>
		<testcase name="[NONE][CKV2_AWS_69] Ensure AWS RDS database instance configured with encryption in transit" classname="\rds.tf.module.rds.aws_db_instance.users_db" file="\rds.tf"/>
		<testcase name="[NONE][CKV2_AWS_62] Ensure S3 buckets should have event notifications enabled" classname="\s3.tf.module.s3.aws_s3_bucket.frontend" file="\s3.tf"/>
		<testcase name="[NONE][CKV2_AWS_76] Ensure AWS ALB attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability" classname="\elb.tf.module.alb.aws_lb.app_alb" file="\elb.tf"/>
		<testcase name="[NONE][CKV2_AWS_54] Ensure AWS CloudFront distribution is using secure SSL protocols for HTTPS communication" classname="\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\cloudfront.tf"/>
		<testcase name="[NONE][CKV2_AWS_51] Ensure AWS API Gateway endpoints uses client certificate authentication" classname="\api_gateway.tf.module.api_gateway.aws_apigatewayv2_stage.default" file="\api_gateway.tf"/>
		<testcase name="[NONE][CKV2_AWS_41] Ensure an IAM role is attached to EC2 instance" classname="\ec2.tf.module.ec2.aws_instance.ec2_ubuntu_docker" file="\ec2.tf"/>
		<testcase name="[NONE][CKV2_AWS_61] Ensure that an S3 bucket has a lifecycle configuration" classname="\s3.tf.module.s3.aws_s3_bucket.frontend" file="\s3.tf"/>
		<testcase name="[NONE][CKV2_AWS_19] Ensure that all EIP addresses allocated to a VPC are attached to EC2 instances" classname="\vpc.tf.module.vpc.aws_eip.nat" file="\vpc.tf"/>
		<testcase name="[NONE][CKV_AWS_18] Ensure the S3 bucket has access logging enabled" classname="\s3.tf.module.s3.aws_s3_bucket.frontend" file="\s3.tf"/>
		<testcase name="[NONE][CKV2_AWS_46] Ensure AWS CloudFront Distribution with S3 have Origin Access set to enabled" classname="\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\cloudfront.tf"/>
		<testcase name="[NONE][CKV2_AWS_44] Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic" classname="\vpc.tf.module.vpc.aws_route_table.private" file="\vpc.tf"/>
		<testcase name="[NONE][CKV2_AWS_44] Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic" classname="\vpc.tf.module.vpc.aws_route_table.public" file="\vpc.tf"/>
		<testcase name="[NONE][CKV_AWS_57] S3 Bucket has an ACL defined which allows public WRITE access." classname="\s3.tf.module.s3.aws_s3_bucket.frontend" file="\s3.tf"/>
		<testcase name="[NONE][CKV_AWS_21] Ensure all data stored in the S3 bucket have versioning enabled" classname="\s3.tf.module.s3.aws_s3_bucket.frontend" file="\s3.tf"/>
		<testcase name="[NONE][CKV2_AWS_6] Ensure that S3 bucket has a Public Access block" classname="\s3.tf.module.s3.aws_s3_bucket.frontend" file="\s3.tf"/>
		<testcase name="[NONE][CKV_AWS_20] S3 Bucket has an ACL defined which allows public READ access." classname="\s3.tf.module.s3.aws_s3_bucket.frontend" file="\s3.tf"/>
		<testcase name="[NONE][CKV_AWS_145] Ensure that S3 buckets are encrypted with KMS by default" classname="\s3.tf.module.s3.aws_s3_bucket.frontend" file="\s3.tf"/>
		<testcase name="[NONE][CKV_AWS_19] Ensure all data stored in the S3 bucket is securely encrypted at rest" classname="\s3.tf.module.s3.aws_s3_bucket.frontend" file="\s3.tf"/>
		<testcase name="[NONE][CKV2_AWS_40] Ensure AWS IAM policy does not allow full IAM privileges" classname="\cloudfront.tf.module.cloudfront.aws_iam_policy_document.s3_oai" file="\cloudfront.tf"/>
		<testcase name="[NONE][CKV_AWS_76] Ensure API Gateway has Access Logging enabled" classname="\modules\api_gateway\api_gateway.tf.module.api_gateway.aws_apigatewayv2_stage.default" file="\modules\api_gateway\api_gateway.tf">
			<failure type="failure" message="Ensure API Gateway has Access Logging enabled">
Resource: module.api_gateway.aws_apigatewayv2_stage.default
File: \modules\api_gateway\api_gateway.tf: 6-10
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-17

		6  | resource &quot;aws_apigatewayv2_stage&quot; &quot;default&quot; {
		7  |   api_id      = aws_apigatewayv2_api.http_api.id
		8  |   name        = &quot;$default&quot;
		9  |   auto_deploy = true
		10 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_86] Ensure CloudFront distribution has Access Logging enabled" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\modules\cloudfront\cloudfront.tf">
			<failure type="failure" message="Ensure CloudFront distribution has Access Logging enabled">
Resource: module.cloudfront.aws_cloudfront_distribution.cdn
File: \modules\cloudfront\cloudfront.tf: 22-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-20

		22 | resource &quot;aws_cloudfront_distribution&quot; &quot;cdn&quot; {
		23 |   enabled             = true
		24 |   is_ipv6_enabled     = true
		25 |   comment             = &quot;CDN para ${var.bucket_name}&quot;
		26 |   default_root_object = &quot;index.html&quot;
		27 | 
		28 |   origin {
		29 |     domain_name = var.bucket_domain
		30 |     origin_id   = &quot;s3-origin&quot;
		31 | 
		32 |     s3_origin_config {
		33 |       origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path
		34 |     }
		35 |   }
		36 | 
		37 |   default_cache_behavior {
		38 |     allowed_methods        = [&quot;GET&quot;, &quot;HEAD&quot;]
		39 |     cached_methods         = [&quot;GET&quot;, &quot;HEAD&quot;]
		40 |     target_origin_id       = &quot;s3-origin&quot;
		41 |     viewer_protocol_policy = &quot;redirect-to-https&quot;
		42 |     compress               = true
		43 | 
		44 |     forwarded_values {
		45 |       query_string = false
		46 |       cookies {
		47 |         forward = &quot;none&quot;
		48 |       }
		49 |     }
		50 |   }
		51 | 
		52 |   price_class = var.cf_price_class
		53 | 
		54 |   viewer_certificate {
		55 |     cloudfront_default_certificate = true
		56 |   }
		57 | 
		58 |   restrictions {
		59 |     geo_restriction {
		60 |       restriction_type = &quot;none&quot;
		61 |     }
		62 |   }
		63 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_310] Ensure CloudFront distributions should have origin failover configured" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\modules\cloudfront\cloudfront.tf">
			<failure type="failure" message="Ensure CloudFront distributions should have origin failover configured">
Resource: module.cloudfront.aws_cloudfront_distribution.cdn
File: \modules\cloudfront\cloudfront.tf: 22-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-310

		22 | resource &quot;aws_cloudfront_distribution&quot; &quot;cdn&quot; {
		23 |   enabled             = true
		24 |   is_ipv6_enabled     = true
		25 |   comment             = &quot;CDN para ${var.bucket_name}&quot;
		26 |   default_root_object = &quot;index.html&quot;
		27 | 
		28 |   origin {
		29 |     domain_name = var.bucket_domain
		30 |     origin_id   = &quot;s3-origin&quot;
		31 | 
		32 |     s3_origin_config {
		33 |       origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path
		34 |     }
		35 |   }
		36 | 
		37 |   default_cache_behavior {
		38 |     allowed_methods        = [&quot;GET&quot;, &quot;HEAD&quot;]
		39 |     cached_methods         = [&quot;GET&quot;, &quot;HEAD&quot;]
		40 |     target_origin_id       = &quot;s3-origin&quot;
		41 |     viewer_protocol_policy = &quot;redirect-to-https&quot;
		42 |     compress               = true
		43 | 
		44 |     forwarded_values {
		45 |       query_string = false
		46 |       cookies {
		47 |         forward = &quot;none&quot;
		48 |       }
		49 |     }
		50 |   }
		51 | 
		52 |   price_class = var.cf_price_class
		53 | 
		54 |   viewer_certificate {
		55 |     cloudfront_default_certificate = true
		56 |   }
		57 | 
		58 |   restrictions {
		59 |     geo_restriction {
		60 |       restriction_type = &quot;none&quot;
		61 |     }
		62 |   }
		63 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_374] Ensure AWS CloudFront web distribution has geo restriction enabled" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\modules\cloudfront\cloudfront.tf">
			<failure type="failure" message="Ensure AWS CloudFront web distribution has geo restriction enabled">
Resource: module.cloudfront.aws_cloudfront_distribution.cdn
File: \modules\cloudfront\cloudfront.tf: 22-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-374

		22 | resource &quot;aws_cloudfront_distribution&quot; &quot;cdn&quot; {
		23 |   enabled             = true
		24 |   is_ipv6_enabled     = true
		25 |   comment             = &quot;CDN para ${var.bucket_name}&quot;
		26 |   default_root_object = &quot;index.html&quot;
		27 | 
		28 |   origin {
		29 |     domain_name = var.bucket_domain
		30 |     origin_id   = &quot;s3-origin&quot;
		31 | 
		32 |     s3_origin_config {
		33 |       origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path
		34 |     }
		35 |   }
		36 | 
		37 |   default_cache_behavior {
		38 |     allowed_methods        = [&quot;GET&quot;, &quot;HEAD&quot;]
		39 |     cached_methods         = [&quot;GET&quot;, &quot;HEAD&quot;]
		40 |     target_origin_id       = &quot;s3-origin&quot;
		41 |     viewer_protocol_policy = &quot;redirect-to-https&quot;
		42 |     compress               = true
		43 | 
		44 |     forwarded_values {
		45 |       query_string = false
		46 |       cookies {
		47 |         forward = &quot;none&quot;
		48 |       }
		49 |     }
		50 |   }
		51 | 
		52 |   price_class = var.cf_price_class
		53 | 
		54 |   viewer_certificate {
		55 |     cloudfront_default_certificate = true
		56 |   }
		57 | 
		58 |   restrictions {
		59 |     geo_restriction {
		60 |       restriction_type = &quot;none&quot;
		61 |     }
		62 |   }
		63 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_174] Verify CloudFront Distribution Viewer Certificate is using TLS v1.2" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\modules\cloudfront\cloudfront.tf">
			<failure type="failure" message="Verify CloudFront Distribution Viewer Certificate is using TLS v1.2">
Resource: module.cloudfront.aws_cloudfront_distribution.cdn
File: \modules\cloudfront\cloudfront.tf: 22-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-63

		22 | resource &quot;aws_cloudfront_distribution&quot; &quot;cdn&quot; {
		23 |   enabled             = true
		24 |   is_ipv6_enabled     = true
		25 |   comment             = &quot;CDN para ${var.bucket_name}&quot;
		26 |   default_root_object = &quot;index.html&quot;
		27 | 
		28 |   origin {
		29 |     domain_name = var.bucket_domain
		30 |     origin_id   = &quot;s3-origin&quot;
		31 | 
		32 |     s3_origin_config {
		33 |       origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path
		34 |     }
		35 |   }
		36 | 
		37 |   default_cache_behavior {
		38 |     allowed_methods        = [&quot;GET&quot;, &quot;HEAD&quot;]
		39 |     cached_methods         = [&quot;GET&quot;, &quot;HEAD&quot;]
		40 |     target_origin_id       = &quot;s3-origin&quot;
		41 |     viewer_protocol_policy = &quot;redirect-to-https&quot;
		42 |     compress               = true
		43 | 
		44 |     forwarded_values {
		45 |       query_string = false
		46 |       cookies {
		47 |         forward = &quot;none&quot;
		48 |       }
		49 |     }
		50 |   }
		51 | 
		52 |   price_class = var.cf_price_class
		53 | 
		54 |   viewer_certificate {
		55 |     cloudfront_default_certificate = true
		56 |   }
		57 | 
		58 |   restrictions {
		59 |     geo_restriction {
		60 |       restriction_type = &quot;none&quot;
		61 |     }
		62 |   }
		63 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_68] CloudFront Distribution should have WAF enabled" classname="\modules\cloudfront\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\modules\cloudfront\cloudfront.tf">
			<failure type="failure" message="CloudFront Distribution should have WAF enabled">
Resource: module.cloudfront.aws_cloudfront_distribution.cdn
File: \modules\cloudfront\cloudfront.tf: 22-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-27

		22 | resource &quot;aws_cloudfront_distribution&quot; &quot;cdn&quot; {
		23 |   enabled             = true
		24 |   is_ipv6_enabled     = true
		25 |   comment             = &quot;CDN para ${var.bucket_name}&quot;
		26 |   default_root_object = &quot;index.html&quot;
		27 | 
		28 |   origin {
		29 |     domain_name = var.bucket_domain
		30 |     origin_id   = &quot;s3-origin&quot;
		31 | 
		32 |     s3_origin_config {
		33 |       origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path
		34 |     }
		35 |   }
		36 | 
		37 |   default_cache_behavior {
		38 |     allowed_methods        = [&quot;GET&quot;, &quot;HEAD&quot;]
		39 |     cached_methods         = [&quot;GET&quot;, &quot;HEAD&quot;]
		40 |     target_origin_id       = &quot;s3-origin&quot;
		41 |     viewer_protocol_policy = &quot;redirect-to-https&quot;
		42 |     compress               = true
		43 | 
		44 |     forwarded_values {
		45 |       query_string = false
		46 |       cookies {
		47 |         forward = &quot;none&quot;
		48 |       }
		49 |     }
		50 |   }
		51 | 
		52 |   price_class = var.cf_price_class
		53 | 
		54 |   viewer_certificate {
		55 |     cloudfront_default_certificate = true
		56 |   }
		57 | 
		58 |   restrictions {
		59 |     geo_restriction {
		60 |       restriction_type = &quot;none&quot;
		61 |     }
		62 |   }
		63 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_126] Ensure that detailed monitoring is enabled for EC2 instances" classname="\modules\ec2\ec2.tf.module.ec2.aws_instance.ec2_ubuntu_docker" file="\modules\ec2\ec2.tf">
			<failure type="failure" message="Ensure that detailed monitoring is enabled for EC2 instances">
Resource: module.ec2.aws_instance.ec2_ubuntu_docker
File: \modules\ec2\ec2.tf: 2-22
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		2  | resource &quot;aws_instance&quot; &quot;ec2_ubuntu_docker&quot; {
		3  |   ami                         = var.ami_id
		4  |   instance_type               = var.instance_type
		5  |   subnet_id                   = var.private_id
		6  |   vpc_security_group_ids      = [var.ec2_sg_id]
		7  |   key_name                    = var.key_name
		8  | 
		9  |   iam_instance_profile = var.iam_instance_profile
		10 | 
		11 | 
		12 |   user_data = templatefile(&quot;${path.module}/scripts/ec2_ms_setup.sh.tpl&quot;, {
		13 |     MS_AUTH_DB_URL = local.ms_auth_db_url
		14 |     MS_USER_DB_URL = local.ms_user_db_url
		15 |     DB_USERNAME    = var.db_username
		16 |     DB_PASSWORD    = var.db_password
		17 |   })
		18 | 
		19 |   tags = {
		20 |     Name = &quot;${var.project_name}-ec2-ubuntu-ms&quot;
		21 |   }
		22 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_135] Ensure that EC2 is EBS optimized" classname="\modules\ec2\ec2.tf.module.ec2.aws_instance.ec2_ubuntu_docker" file="\modules\ec2\ec2.tf">
			<failure type="failure" message="Ensure that EC2 is EBS optimized">
Resource: module.ec2.aws_instance.ec2_ubuntu_docker
File: \modules\ec2\ec2.tf: 2-22
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized

		2  | resource &quot;aws_instance&quot; &quot;ec2_ubuntu_docker&quot; {
		3  |   ami                         = var.ami_id
		4  |   instance_type               = var.instance_type
		5  |   subnet_id                   = var.private_id
		6  |   vpc_security_group_ids      = [var.ec2_sg_id]
		7  |   key_name                    = var.key_name
		8  | 
		9  |   iam_instance_profile = var.iam_instance_profile
		10 | 
		11 | 
		12 |   user_data = templatefile(&quot;${path.module}/scripts/ec2_ms_setup.sh.tpl&quot;, {
		13 |     MS_AUTH_DB_URL = local.ms_auth_db_url
		14 |     MS_USER_DB_URL = local.ms_user_db_url
		15 |     DB_USERNAME    = var.db_username
		16 |     DB_PASSWORD    = var.db_password
		17 |   })
		18 | 
		19 |   tags = {
		20 |     Name = &quot;${var.project_name}-ec2-ubuntu-ms&quot;
		21 |   }
		22 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_79] Ensure Instance Metadata Service Version 1 is not enabled" classname="\modules\ec2\ec2.tf.module.ec2.aws_instance.ec2_ubuntu_docker" file="\modules\ec2\ec2.tf">
			<failure type="failure" message="Ensure Instance Metadata Service Version 1 is not enabled">
Resource: module.ec2.aws_instance.ec2_ubuntu_docker
File: \modules\ec2\ec2.tf: 2-22
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31

		2  | resource &quot;aws_instance&quot; &quot;ec2_ubuntu_docker&quot; {
		3  |   ami                         = var.ami_id
		4  |   instance_type               = var.instance_type
		5  |   subnet_id                   = var.private_id
		6  |   vpc_security_group_ids      = [var.ec2_sg_id]
		7  |   key_name                    = var.key_name
		8  | 
		9  |   iam_instance_profile = var.iam_instance_profile
		10 | 
		11 | 
		12 |   user_data = templatefile(&quot;${path.module}/scripts/ec2_ms_setup.sh.tpl&quot;, {
		13 |     MS_AUTH_DB_URL = local.ms_auth_db_url
		14 |     MS_USER_DB_URL = local.ms_user_db_url
		15 |     DB_USERNAME    = var.db_username
		16 |     DB_PASSWORD    = var.db_password
		17 |   })
		18 | 
		19 |   tags = {
		20 |     Name = &quot;${var.project_name}-ec2-ubuntu-ms&quot;
		21 |   }
		22 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_8] Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted" classname="\modules\ec2\ec2.tf.module.ec2.aws_instance.ec2_ubuntu_docker" file="\modules\ec2\ec2.tf">
			<failure type="failure" message="Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted">
Resource: module.ec2.aws_instance.ec2_ubuntu_docker
File: \modules\ec2\ec2.tf: 2-22
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-13

		2  | resource &quot;aws_instance&quot; &quot;ec2_ubuntu_docker&quot; {
		3  |   ami                         = var.ami_id
		4  |   instance_type               = var.instance_type
		5  |   subnet_id                   = var.private_id
		6  |   vpc_security_group_ids      = [var.ec2_sg_id]
		7  |   key_name                    = var.key_name
		8  | 
		9  |   iam_instance_profile = var.iam_instance_profile
		10 | 
		11 | 
		12 |   user_data = templatefile(&quot;${path.module}/scripts/ec2_ms_setup.sh.tpl&quot;, {
		13 |     MS_AUTH_DB_URL = local.ms_auth_db_url
		14 |     MS_USER_DB_URL = local.ms_user_db_url
		15 |     DB_USERNAME    = var.db_username
		16 |     DB_PASSWORD    = var.db_password
		17 |   })
		18 | 
		19 |   tags = {
		20 |     Name = &quot;${var.project_name}-ec2-ubuntu-ms&quot;
		21 |   }
		22 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_131] Ensure that ALB drops HTTP headers" classname="\modules\elb\elb.tf.module.alb.aws_lb.app_alb" file="\modules\elb\elb.tf">
			<failure type="failure" message="Ensure that ALB drops HTTP headers">
Resource: module.alb.aws_lb.app_alb
File: \modules\elb\elb.tf: 1-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-drops-http-headers

		1  | resource &quot;aws_lb&quot; &quot;app_alb&quot; {
		2  |   name               = &quot;${var.project_name}-alb&quot;
		3  |   internal           = false
		4  |   load_balancer_type = &quot;application&quot;
		5  |   security_groups    = [var.alb_sg_id]
		6  |   subnets            = var.public_subnet_ids
		7  | 
		8  |   tags = {
		9  |     Name = &quot;${var.project_name}-alb&quot;
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_91] Ensure the ELBv2 (Application/Network) has access logging enabled" classname="\modules\elb\elb.tf.module.alb.aws_lb.app_alb" file="\modules\elb\elb.tf">
			<failure type="failure" message="Ensure the ELBv2 (Application/Network) has access logging enabled">
Resource: module.alb.aws_lb.app_alb
File: \modules\elb\elb.tf: 1-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-22

		1  | resource &quot;aws_lb&quot; &quot;app_alb&quot; {
		2  |   name               = &quot;${var.project_name}-alb&quot;
		3  |   internal           = false
		4  |   load_balancer_type = &quot;application&quot;
		5  |   security_groups    = [var.alb_sg_id]
		6  |   subnets            = var.public_subnet_ids
		7  | 
		8  |   tags = {
		9  |     Name = &quot;${var.project_name}-alb&quot;
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_150] Ensure that Load Balancer has deletion protection enabled" classname="\modules\elb\elb.tf.module.alb.aws_lb.app_alb" file="\modules\elb\elb.tf">
			<failure type="failure" message="Ensure that Load Balancer has deletion protection enabled">
Resource: module.alb.aws_lb.app_alb
File: \modules\elb\elb.tf: 1-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-150

		1  | resource &quot;aws_lb&quot; &quot;app_alb&quot; {
		2  |   name               = &quot;${var.project_name}-alb&quot;
		3  |   internal           = false
		4  |   load_balancer_type = &quot;application&quot;
		5  |   security_groups    = [var.alb_sg_id]
		6  |   subnets            = var.public_subnet_ids
		7  | 
		8  |   tags = {
		9  |     Name = &quot;${var.project_name}-alb&quot;
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_2] Ensure ALB protocol is HTTPS" classname="\modules\elb\elb.tf.module.alb.aws_lb_listener.http_listener" file="\modules\elb\elb.tf">
			<failure type="failure" message="Ensure ALB protocol is HTTPS">
Resource: module.alb.aws_lb_listener.http_listener
File: \modules\elb\elb.tf: 91-104
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-29

		91  | resource &quot;aws_lb_listener&quot; &quot;http_listener&quot; {
		92  |   load_balancer_arn = aws_lb.app_alb.arn
		93  |   port              = 80
		94  |   protocol          = &quot;HTTP&quot;
		95  | 
		96  |   default_action {
		97  |     type = &quot;fixed-response&quot;
		98  |     fixed_response {
		99  |       content_type = &quot;text/plain&quot;
		100 |       message_body = &quot;404 Not Found&quot;
		101 |       status_code  = &quot;404&quot;
		102 |     }
		103 |   }
		104 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_129] Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled">
Resource: module.rds.aws_db_instance.auth_db
File: \modules\rds\rds.tf: 1-19
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		1  | resource &quot;aws_db_instance&quot; &quot;auth_db&quot; {
		2  |   identifier         = &quot;${var.project_name}-auth-db&quot;
		3  |   engine             = &quot;postgres&quot;
		4  |   engine_version     = &quot;15&quot;
		5  |   instance_class     = var.db_instance_class
		6  |   allocated_storage  = 20
		7  |   db_name            = &quot;authdb&quot;
		8  |   username           = var.db_username
		9  |   password           = var**********
		10 |   port               = 5432
		11 |   publicly_accessible = false
		12 |   vpc_security_group_ids = [var.rds_sg_id]
		13 |   db_subnet_group_name   = var.db_subnet_group_name
		14 |   skip_final_snapshot    = true
		15 | 
		16 |   tags = {
		17 |     Name = &quot;${var.project_name}-auth-db&quot;
		18 |   }
		19 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_226] Ensure DB instance gets all minor upgrades automatically" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure DB instance gets all minor upgrades automatically">
Resource: module.rds.aws_db_instance.auth_db
File: \modules\rds\rds.tf: 1-19
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-db-instance-gets-all-minor-upgrades-automatically

		1  | resource &quot;aws_db_instance&quot; &quot;auth_db&quot; {
		2  |   identifier         = &quot;${var.project_name}-auth-db&quot;
		3  |   engine             = &quot;postgres&quot;
		4  |   engine_version     = &quot;15&quot;
		5  |   instance_class     = var.db_instance_class
		6  |   allocated_storage  = 20
		7  |   db_name            = &quot;authdb&quot;
		8  |   username           = var.db_username
		9  |   password           = var**********
		10 |   port               = 5432
		11 |   publicly_accessible = false
		12 |   vpc_security_group_ids = [var.rds_sg_id]
		13 |   db_subnet_group_name   = var.db_subnet_group_name
		14 |   skip_final_snapshot    = true
		15 | 
		16 |   tags = {
		17 |     Name = &quot;${var.project_name}-auth-db&quot;
		18 |   }
		19 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_16] Ensure all data stored in the RDS is securely encrypted at rest" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure all data stored in the RDS is securely encrypted at rest">
Resource: module.rds.aws_db_instance.auth_db
File: \modules\rds\rds.tf: 1-19
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-4

		1  | resource &quot;aws_db_instance&quot; &quot;auth_db&quot; {
		2  |   identifier         = &quot;${var.project_name}-auth-db&quot;
		3  |   engine             = &quot;postgres&quot;
		4  |   engine_version     = &quot;15&quot;
		5  |   instance_class     = var.db_instance_class
		6  |   allocated_storage  = 20
		7  |   db_name            = &quot;authdb&quot;
		8  |   username           = var.db_username
		9  |   password           = var**********
		10 |   port               = 5432
		11 |   publicly_accessible = false
		12 |   vpc_security_group_ids = [var.rds_sg_id]
		13 |   db_subnet_group_name   = var.db_subnet_group_name
		14 |   skip_final_snapshot    = true
		15 | 
		16 |   tags = {
		17 |     Name = &quot;${var.project_name}-auth-db&quot;
		18 |   }
		19 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_118] Ensure that enhanced monitoring is enabled for Amazon RDS instances" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure that enhanced monitoring is enabled for Amazon RDS instances">
Resource: module.rds.aws_db_instance.auth_db
File: \modules\rds\rds.tf: 1-19
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		1  | resource &quot;aws_db_instance&quot; &quot;auth_db&quot; {
		2  |   identifier         = &quot;${var.project_name}-auth-db&quot;
		3  |   engine             = &quot;postgres&quot;
		4  |   engine_version     = &quot;15&quot;
		5  |   instance_class     = var.db_instance_class
		6  |   allocated_storage  = 20
		7  |   db_name            = &quot;authdb&quot;
		8  |   username           = var.db_username
		9  |   password           = var**********
		10 |   port               = 5432
		11 |   publicly_accessible = false
		12 |   vpc_security_group_ids = [var.rds_sg_id]
		13 |   db_subnet_group_name   = var.db_subnet_group_name
		14 |   skip_final_snapshot    = true
		15 | 
		16 |   tags = {
		17 |     Name = &quot;${var.project_name}-auth-db&quot;
		18 |   }
		19 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_161] Ensure RDS database has IAM authentication enabled" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure RDS database has IAM authentication enabled">
Resource: module.rds.aws_db_instance.auth_db
File: \modules\rds\rds.tf: 1-19
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-rds-database-has-iam-authentication-enabled

		1  | resource &quot;aws_db_instance&quot; &quot;auth_db&quot; {
		2  |   identifier         = &quot;${var.project_name}-auth-db&quot;
		3  |   engine             = &quot;postgres&quot;
		4  |   engine_version     = &quot;15&quot;
		5  |   instance_class     = var.db_instance_class
		6  |   allocated_storage  = 20
		7  |   db_name            = &quot;authdb&quot;
		8  |   username           = var.db_username
		9  |   password           = var**********
		10 |   port               = 5432
		11 |   publicly_accessible = false
		12 |   vpc_security_group_ids = [var.rds_sg_id]
		13 |   db_subnet_group_name   = var.db_subnet_group_name
		14 |   skip_final_snapshot    = true
		15 | 
		16 |   tags = {
		17 |     Name = &quot;${var.project_name}-auth-db&quot;
		18 |   }
		19 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_293] Ensure that AWS database instances have deletion protection enabled" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure that AWS database instances have deletion protection enabled">
Resource: module.rds.aws_db_instance.auth_db
File: \modules\rds\rds.tf: 1-19
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-293

		1  | resource &quot;aws_db_instance&quot; &quot;auth_db&quot; {
		2  |   identifier         = &quot;${var.project_name}-auth-db&quot;
		3  |   engine             = &quot;postgres&quot;
		4  |   engine_version     = &quot;15&quot;
		5  |   instance_class     = var.db_instance_class
		6  |   allocated_storage  = 20
		7  |   db_name            = &quot;authdb&quot;
		8  |   username           = var.db_username
		9  |   password           = var**********
		10 |   port               = 5432
		11 |   publicly_accessible = false
		12 |   vpc_security_group_ids = [var.rds_sg_id]
		13 |   db_subnet_group_name   = var.db_subnet_group_name
		14 |   skip_final_snapshot    = true
		15 | 
		16 |   tags = {
		17 |     Name = &quot;${var.project_name}-auth-db&quot;
		18 |   }
		19 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_353] Ensure that RDS instances have performance insights enabled" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure that RDS instances have performance insights enabled">
Resource: module.rds.aws_db_instance.auth_db
File: \modules\rds\rds.tf: 1-19
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-353

		1  | resource &quot;aws_db_instance&quot; &quot;auth_db&quot; {
		2  |   identifier         = &quot;${var.project_name}-auth-db&quot;
		3  |   engine             = &quot;postgres&quot;
		4  |   engine_version     = &quot;15&quot;
		5  |   instance_class     = var.db_instance_class
		6  |   allocated_storage  = 20
		7  |   db_name            = &quot;authdb&quot;
		8  |   username           = var.db_username
		9  |   password           = var**********
		10 |   port               = 5432
		11 |   publicly_accessible = false
		12 |   vpc_security_group_ids = [var.rds_sg_id]
		13 |   db_subnet_group_name   = var.db_subnet_group_name
		14 |   skip_final_snapshot    = true
		15 | 
		16 |   tags = {
		17 |     Name = &quot;${var.project_name}-auth-db&quot;
		18 |   }
		19 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_157] Ensure that RDS instances have Multi-AZ enabled" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.auth_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure that RDS instances have Multi-AZ enabled">
Resource: module.rds.aws_db_instance.auth_db
File: \modules\rds\rds.tf: 1-19
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-73

		1  | resource &quot;aws_db_instance&quot; &quot;auth_db&quot; {
		2  |   identifier         = &quot;${var.project_name}-auth-db&quot;
		3  |   engine             = &quot;postgres&quot;
		4  |   engine_version     = &quot;15&quot;
		5  |   instance_class     = var.db_instance_class
		6  |   allocated_storage  = 20
		7  |   db_name            = &quot;authdb&quot;
		8  |   username           = var.db_username
		9  |   password           = var**********
		10 |   port               = 5432
		11 |   publicly_accessible = false
		12 |   vpc_security_group_ids = [var.rds_sg_id]
		13 |   db_subnet_group_name   = var.db_subnet_group_name
		14 |   skip_final_snapshot    = true
		15 | 
		16 |   tags = {
		17 |     Name = &quot;${var.project_name}-auth-db&quot;
		18 |   }
		19 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_129] Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled">
Resource: module.rds.aws_db_instance.users_db
File: \modules\rds\rds.tf: 21-39
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		21 | resource &quot;aws_db_instance&quot; &quot;users_db&quot; {
		22 |   identifier         = &quot;${var.project_name}-users-db&quot;
		23 |   engine             = &quot;postgres&quot;
		24 |   engine_version     = &quot;15&quot;
		25 |   instance_class     = var.db_instance_class
		26 |   allocated_storage  = 20
		27 |   db_name            = &quot;userdb&quot;
		28 |   username           = var.db_username
		29 |   password           = var**********
		30 |   port               = 5432
		31 |   publicly_accessible = false
		32 |   vpc_security_group_ids = [var.rds_sg_id]
		33 |   db_subnet_group_name   = var.db_subnet_group_name
		34 |   skip_final_snapshot    = true
		35 | 
		36 |   tags = {
		37 |     Name = &quot;${var.project_name}-users-db&quot;
		38 |   }
		39 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_226] Ensure DB instance gets all minor upgrades automatically" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure DB instance gets all minor upgrades automatically">
Resource: module.rds.aws_db_instance.users_db
File: \modules\rds\rds.tf: 21-39
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-db-instance-gets-all-minor-upgrades-automatically

		21 | resource &quot;aws_db_instance&quot; &quot;users_db&quot; {
		22 |   identifier         = &quot;${var.project_name}-users-db&quot;
		23 |   engine             = &quot;postgres&quot;
		24 |   engine_version     = &quot;15&quot;
		25 |   instance_class     = var.db_instance_class
		26 |   allocated_storage  = 20
		27 |   db_name            = &quot;userdb&quot;
		28 |   username           = var.db_username
		29 |   password           = var**********
		30 |   port               = 5432
		31 |   publicly_accessible = false
		32 |   vpc_security_group_ids = [var.rds_sg_id]
		33 |   db_subnet_group_name   = var.db_subnet_group_name
		34 |   skip_final_snapshot    = true
		35 | 
		36 |   tags = {
		37 |     Name = &quot;${var.project_name}-users-db&quot;
		38 |   }
		39 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_16] Ensure all data stored in the RDS is securely encrypted at rest" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure all data stored in the RDS is securely encrypted at rest">
Resource: module.rds.aws_db_instance.users_db
File: \modules\rds\rds.tf: 21-39
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-4

		21 | resource &quot;aws_db_instance&quot; &quot;users_db&quot; {
		22 |   identifier         = &quot;${var.project_name}-users-db&quot;
		23 |   engine             = &quot;postgres&quot;
		24 |   engine_version     = &quot;15&quot;
		25 |   instance_class     = var.db_instance_class
		26 |   allocated_storage  = 20
		27 |   db_name            = &quot;userdb&quot;
		28 |   username           = var.db_username
		29 |   password           = var**********
		30 |   port               = 5432
		31 |   publicly_accessible = false
		32 |   vpc_security_group_ids = [var.rds_sg_id]
		33 |   db_subnet_group_name   = var.db_subnet_group_name
		34 |   skip_final_snapshot    = true
		35 | 
		36 |   tags = {
		37 |     Name = &quot;${var.project_name}-users-db&quot;
		38 |   }
		39 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_118] Ensure that enhanced monitoring is enabled for Amazon RDS instances" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure that enhanced monitoring is enabled for Amazon RDS instances">
Resource: module.rds.aws_db_instance.users_db
File: \modules\rds\rds.tf: 21-39
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		21 | resource &quot;aws_db_instance&quot; &quot;users_db&quot; {
		22 |   identifier         = &quot;${var.project_name}-users-db&quot;
		23 |   engine             = &quot;postgres&quot;
		24 |   engine_version     = &quot;15&quot;
		25 |   instance_class     = var.db_instance_class
		26 |   allocated_storage  = 20
		27 |   db_name            = &quot;userdb&quot;
		28 |   username           = var.db_username
		29 |   password           = var**********
		30 |   port               = 5432
		31 |   publicly_accessible = false
		32 |   vpc_security_group_ids = [var.rds_sg_id]
		33 |   db_subnet_group_name   = var.db_subnet_group_name
		34 |   skip_final_snapshot    = true
		35 | 
		36 |   tags = {
		37 |     Name = &quot;${var.project_name}-users-db&quot;
		38 |   }
		39 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_161] Ensure RDS database has IAM authentication enabled" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure RDS database has IAM authentication enabled">
Resource: module.rds.aws_db_instance.users_db
File: \modules\rds\rds.tf: 21-39
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-rds-database-has-iam-authentication-enabled

		21 | resource &quot;aws_db_instance&quot; &quot;users_db&quot; {
		22 |   identifier         = &quot;${var.project_name}-users-db&quot;
		23 |   engine             = &quot;postgres&quot;
		24 |   engine_version     = &quot;15&quot;
		25 |   instance_class     = var.db_instance_class
		26 |   allocated_storage  = 20
		27 |   db_name            = &quot;userdb&quot;
		28 |   username           = var.db_username
		29 |   password           = var**********
		30 |   port               = 5432
		31 |   publicly_accessible = false
		32 |   vpc_security_group_ids = [var.rds_sg_id]
		33 |   db_subnet_group_name   = var.db_subnet_group_name
		34 |   skip_final_snapshot    = true
		35 | 
		36 |   tags = {
		37 |     Name = &quot;${var.project_name}-users-db&quot;
		38 |   }
		39 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_293] Ensure that AWS database instances have deletion protection enabled" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure that AWS database instances have deletion protection enabled">
Resource: module.rds.aws_db_instance.users_db
File: \modules\rds\rds.tf: 21-39
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-293

		21 | resource &quot;aws_db_instance&quot; &quot;users_db&quot; {
		22 |   identifier         = &quot;${var.project_name}-users-db&quot;
		23 |   engine             = &quot;postgres&quot;
		24 |   engine_version     = &quot;15&quot;
		25 |   instance_class     = var.db_instance_class
		26 |   allocated_storage  = 20
		27 |   db_name            = &quot;userdb&quot;
		28 |   username           = var.db_username
		29 |   password           = var**********
		30 |   port               = 5432
		31 |   publicly_accessible = false
		32 |   vpc_security_group_ids = [var.rds_sg_id]
		33 |   db_subnet_group_name   = var.db_subnet_group_name
		34 |   skip_final_snapshot    = true
		35 | 
		36 |   tags = {
		37 |     Name = &quot;${var.project_name}-users-db&quot;
		38 |   }
		39 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_353] Ensure that RDS instances have performance insights enabled" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure that RDS instances have performance insights enabled">
Resource: module.rds.aws_db_instance.users_db
File: \modules\rds\rds.tf: 21-39
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-353

		21 | resource &quot;aws_db_instance&quot; &quot;users_db&quot; {
		22 |   identifier         = &quot;${var.project_name}-users-db&quot;
		23 |   engine             = &quot;postgres&quot;
		24 |   engine_version     = &quot;15&quot;
		25 |   instance_class     = var.db_instance_class
		26 |   allocated_storage  = 20
		27 |   db_name            = &quot;userdb&quot;
		28 |   username           = var.db_username
		29 |   password           = var**********
		30 |   port               = 5432
		31 |   publicly_accessible = false
		32 |   vpc_security_group_ids = [var.rds_sg_id]
		33 |   db_subnet_group_name   = var.db_subnet_group_name
		34 |   skip_final_snapshot    = true
		35 | 
		36 |   tags = {
		37 |     Name = &quot;${var.project_name}-users-db&quot;
		38 |   }
		39 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_157] Ensure that RDS instances have Multi-AZ enabled" classname="\modules\rds\rds.tf.module.rds.aws_db_instance.users_db" file="\modules\rds\rds.tf">
			<failure type="failure" message="Ensure that RDS instances have Multi-AZ enabled">
Resource: module.rds.aws_db_instance.users_db
File: \modules\rds\rds.tf: 21-39
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-73

		21 | resource &quot;aws_db_instance&quot; &quot;users_db&quot; {
		22 |   identifier         = &quot;${var.project_name}-users-db&quot;
		23 |   engine             = &quot;postgres&quot;
		24 |   engine_version     = &quot;15&quot;
		25 |   instance_class     = var.db_instance_class
		26 |   allocated_storage  = 20
		27 |   db_name            = &quot;userdb&quot;
		28 |   username           = var.db_username
		29 |   password           = var**********
		30 |   port               = 5432
		31 |   publicly_accessible = false
		32 |   vpc_security_group_ids = [var.rds_sg_id]
		33 |   db_subnet_group_name   = var.db_subnet_group_name
		34 |   skip_final_snapshot    = true
		35 | 
		36 |   tags = {
		37 |     Name = &quot;${var.project_name}-users-db&quot;
		38 |   }
		39 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="\modules\security\security.tf.module.security.aws_security_group.ec2_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure every security group and rule has a description">
Resource: module.security.aws_security_group.ec2_sg
File: \modules\security\security.tf: 2-41
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		2  | resource &quot;aws_security_group&quot; &quot;ec2_sg&quot; {
		3  |   name        = &quot;${var.project_name}-ec2-sg&quot;
		4  |   description = &quot;Permite HTTP, HTTPS y Docker ports&quot;
		5  |   vpc_id      = var.vpc_id
		6  | 
		7  |   ingress {
		8  |     description = &quot;Allow HTTP&quot;
		9  |     from_port   = 80
		10 |     to_port     = 80
		11 |     protocol    = &quot;tcp&quot;
		12 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		13 |   }
		14 | 
		15 |   ingress {
		16 |     description = &quot;Allow HTTPS&quot;
		17 |     from_port   = 443
		18 |     to_port     = 443
		19 |     protocol    = &quot;tcp&quot;
		20 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		21 |   }
		22 | 
		23 |   ingress {
		24 |     description = &quot;Docker Compose servicios expuestos&quot;
		25 |     from_port   = 3000
		26 |     to_port     = 3999
		27 |     protocol    = &quot;tcp&quot;
		28 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		29 |   }
		30 | 
		31 |   egress {
		32 |     from_port   = 0
		33 |     to_port     = 0
		34 |     protocol    = &quot;-1&quot;
		35 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		36 |   }
		37 | 
		38 |   tags = {
		39 |     Name = &quot;${var.project_name}-ec2-sg&quot;
		40 |   }
		41 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="\modules\security\security.tf.module.security.aws_security_group.ec2_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: module.security.aws_security_group.ec2_sg
File: \modules\security\security.tf: 2-41
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		2  | resource &quot;aws_security_group&quot; &quot;ec2_sg&quot; {
		3  |   name        = &quot;${var.project_name}-ec2-sg&quot;
		4  |   description = &quot;Permite HTTP, HTTPS y Docker ports&quot;
		5  |   vpc_id      = var.vpc_id
		6  | 
		7  |   ingress {
		8  |     description = &quot;Allow HTTP&quot;
		9  |     from_port   = 80
		10 |     to_port     = 80
		11 |     protocol    = &quot;tcp&quot;
		12 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		13 |   }
		14 | 
		15 |   ingress {
		16 |     description = &quot;Allow HTTPS&quot;
		17 |     from_port   = 443
		18 |     to_port     = 443
		19 |     protocol    = &quot;tcp&quot;
		20 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		21 |   }
		22 | 
		23 |   ingress {
		24 |     description = &quot;Docker Compose servicios expuestos&quot;
		25 |     from_port   = 3000
		26 |     to_port     = 3999
		27 |     protocol    = &quot;tcp&quot;
		28 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		29 |   }
		30 | 
		31 |   egress {
		32 |     from_port   = 0
		33 |     to_port     = 0
		34 |     protocol    = &quot;-1&quot;
		35 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		36 |   }
		37 | 
		38 |   tags = {
		39 |     Name = &quot;${var.project_name}-ec2-sg&quot;
		40 |   }
		41 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="\modules\security\security.tf.module.security.aws_security_group.ec2_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389">
Resource: module.security.aws_security_group.ec2_sg
File: \modules\security\security.tf: 2-41
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2

		2  | resource &quot;aws_security_group&quot; &quot;ec2_sg&quot; {
		3  |   name        = &quot;${var.project_name}-ec2-sg&quot;
		4  |   description = &quot;Permite HTTP, HTTPS y Docker ports&quot;
		5  |   vpc_id      = var.vpc_id
		6  | 
		7  |   ingress {
		8  |     description = &quot;Allow HTTP&quot;
		9  |     from_port   = 80
		10 |     to_port     = 80
		11 |     protocol    = &quot;tcp&quot;
		12 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		13 |   }
		14 | 
		15 |   ingress {
		16 |     description = &quot;Allow HTTPS&quot;
		17 |     from_port   = 443
		18 |     to_port     = 443
		19 |     protocol    = &quot;tcp&quot;
		20 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		21 |   }
		22 | 
		23 |   ingress {
		24 |     description = &quot;Docker Compose servicios expuestos&quot;
		25 |     from_port   = 3000
		26 |     to_port     = 3999
		27 |     protocol    = &quot;tcp&quot;
		28 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		29 |   }
		30 | 
		31 |   egress {
		32 |     from_port   = 0
		33 |     to_port     = 0
		34 |     protocol    = &quot;-1&quot;
		35 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		36 |   }
		37 | 
		38 |   tags = {
		39 |     Name = &quot;${var.project_name}-ec2-sg&quot;
		40 |   }
		41 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="\modules\security\security.tf.module.security.aws_security_group.ec2_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure no security groups allow ingress from 0.0.0.0:0 to port 80">
Resource: module.security.aws_security_group.ec2_sg
File: \modules\security\security.tf: 2-41
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80

		2  | resource &quot;aws_security_group&quot; &quot;ec2_sg&quot; {
		3  |   name        = &quot;${var.project_name}-ec2-sg&quot;
		4  |   description = &quot;Permite HTTP, HTTPS y Docker ports&quot;
		5  |   vpc_id      = var.vpc_id
		6  | 
		7  |   ingress {
		8  |     description = &quot;Allow HTTP&quot;
		9  |     from_port   = 80
		10 |     to_port     = 80
		11 |     protocol    = &quot;tcp&quot;
		12 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		13 |   }
		14 | 
		15 |   ingress {
		16 |     description = &quot;Allow HTTPS&quot;
		17 |     from_port   = 443
		18 |     to_port     = 443
		19 |     protocol    = &quot;tcp&quot;
		20 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		21 |   }
		22 | 
		23 |   ingress {
		24 |     description = &quot;Docker Compose servicios expuestos&quot;
		25 |     from_port   = 3000
		26 |     to_port     = 3999
		27 |     protocol    = &quot;tcp&quot;
		28 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		29 |   }
		30 | 
		31 |   egress {
		32 |     from_port   = 0
		33 |     to_port     = 0
		34 |     protocol    = &quot;-1&quot;
		35 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		36 |   }
		37 | 
		38 |   tags = {
		39 |     Name = &quot;${var.project_name}-ec2-sg&quot;
		40 |   }
		41 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="\modules\security\security.tf.module.security.aws_security_group.rds_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure every security group and rule has a description">
Resource: module.security.aws_security_group.rds_sg
File: \modules\security\security.tf: 44-67
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		44 | resource &quot;aws_security_group&quot; &quot;rds_sg&quot; {
		45 |   name        = &quot;${var.project_name}-rds-sg&quot;
		46 |   description = &quot;Permite acceder a la DB por el EC2&quot;
		47 |   vpc_id      = var.vpc_id
		48 | 
		49 |   ingress {
		50 |     description = &quot;PostgreSQL&quot;
		51 |     from_port   = 5432
		52 |     to_port     = 5432
		53 |     protocol    = &quot;tcp&quot;
		54 |     security_groups = [aws_security_group.ec2_sg.id] # Only EC2 instances
		55 |   }
		56 | 
		57 |   egress {
		58 |     from_port   = 0
		59 |     to_port     = 0
		60 |     protocol    = &quot;-1&quot;
		61 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		62 |   }
		63 | 
		64 |   tags = {
		65 |     Name = &quot;${var.project_name}-rds-sg&quot;
		66 |   }
		67 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="\modules\security\security.tf.module.security.aws_security_group.rds_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: module.security.aws_security_group.rds_sg
File: \modules\security\security.tf: 44-67
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		44 | resource &quot;aws_security_group&quot; &quot;rds_sg&quot; {
		45 |   name        = &quot;${var.project_name}-rds-sg&quot;
		46 |   description = &quot;Permite acceder a la DB por el EC2&quot;
		47 |   vpc_id      = var.vpc_id
		48 | 
		49 |   ingress {
		50 |     description = &quot;PostgreSQL&quot;
		51 |     from_port   = 5432
		52 |     to_port     = 5432
		53 |     protocol    = &quot;tcp&quot;
		54 |     security_groups = [aws_security_group.ec2_sg.id] # Only EC2 instances
		55 |   }
		56 | 
		57 |   egress {
		58 |     from_port   = 0
		59 |     to_port     = 0
		60 |     protocol    = &quot;-1&quot;
		61 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		62 |   }
		63 | 
		64 |   tags = {
		65 |     Name = &quot;${var.project_name}-rds-sg&quot;
		66 |   }
		67 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="\modules\security\security.tf.module.security.aws_security_group.ssh_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure every security group and rule has a description">
Resource: module.security.aws_security_group.ssh_sg
File: \modules\security\security.tf: 70-93
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		70 | resource &quot;aws_security_group&quot; &quot;ssh_sg&quot; {
		71 |   name        = &quot;${var.project_name}-ssh-sg&quot;
		72 |   description = &quot;Permite conexion SSH con tu IP&quot;
		73 |   vpc_id      = var.vpc_id
		74 | 
		75 |   ingress {
		76 |     description = &quot;SSH&quot;
		77 |     from_port   = 22
		78 |     to_port     = 22
		79 |     protocol    = &quot;tcp&quot;
		80 |     cidr_blocks = [var.user_ip_cidr] # Ip de la persona que quiera usar la conexión SSH
		81 |   }
		82 | 
		83 |   egress {
		84 |     from_port   = 0
		85 |     to_port     = 0
		86 |     protocol    = &quot;-1&quot;
		87 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		88 |   }
		89 | 
		90 |   tags = {
		91 |     Name = &quot;${var.project_name}-ssh-sg&quot;
		92 |   }
		93 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="\modules\security\security.tf.module.security.aws_security_group.ssh_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: module.security.aws_security_group.ssh_sg
File: \modules\security\security.tf: 70-93
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		70 | resource &quot;aws_security_group&quot; &quot;ssh_sg&quot; {
		71 |   name        = &quot;${var.project_name}-ssh-sg&quot;
		72 |   description = &quot;Permite conexion SSH con tu IP&quot;
		73 |   vpc_id      = var.vpc_id
		74 | 
		75 |   ingress {
		76 |     description = &quot;SSH&quot;
		77 |     from_port   = 22
		78 |     to_port     = 22
		79 |     protocol    = &quot;tcp&quot;
		80 |     cidr_blocks = [var.user_ip_cidr] # Ip de la persona que quiera usar la conexión SSH
		81 |   }
		82 | 
		83 |   egress {
		84 |     from_port   = 0
		85 |     to_port     = 0
		86 |     protocol    = &quot;-1&quot;
		87 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		88 |   }
		89 | 
		90 |   tags = {
		91 |     Name = &quot;${var.project_name}-ssh-sg&quot;
		92 |   }
		93 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="\modules\security\security.tf.module.security.aws_security_group.alb_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure every security group and rule has a description">
Resource: module.security.aws_security_group.alb_sg
File: \modules\security\security.tf: 96-118
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		96  | resource &quot;aws_security_group&quot; &quot;alb_sg&quot; {
		97  |   name        = &quot;${var.project_name}-alb-sg&quot;
		98  |   description = &quot;Permite trafico HTTP al ALB&quot;
		99  |   vpc_id      = var.vpc_id
		100 | 
		101 |   ingress {
		102 |     from_port   = 80
		103 |     to_port     = 80
		104 |     protocol    = &quot;tcp&quot;
		105 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		106 |   }
		107 | 
		108 |   egress {
		109 |     from_port   = 0
		110 |     to_port     = 0
		111 |     protocol    = &quot;-1&quot;
		112 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		113 |   }
		114 | 
		115 |   tags = {
		116 |     Name = &quot;${var.project_name}-alb-sg&quot;
		117 |   }
		118 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="\modules\security\security.tf.module.security.aws_security_group.alb_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: module.security.aws_security_group.alb_sg
File: \modules\security\security.tf: 96-118
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		96  | resource &quot;aws_security_group&quot; &quot;alb_sg&quot; {
		97  |   name        = &quot;${var.project_name}-alb-sg&quot;
		98  |   description = &quot;Permite trafico HTTP al ALB&quot;
		99  |   vpc_id      = var.vpc_id
		100 | 
		101 |   ingress {
		102 |     from_port   = 80
		103 |     to_port     = 80
		104 |     protocol    = &quot;tcp&quot;
		105 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		106 |   }
		107 | 
		108 |   egress {
		109 |     from_port   = 0
		110 |     to_port     = 0
		111 |     protocol    = &quot;-1&quot;
		112 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		113 |   }
		114 | 
		115 |   tags = {
		116 |     Name = &quot;${var.project_name}-alb-sg&quot;
		117 |   }
		118 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="\modules\security\security.tf.module.security.aws_security_group.alb_sg" file="\modules\security\security.tf">
			<failure type="failure" message="Ensure no security groups allow ingress from 0.0.0.0:0 to port 80">
Resource: module.security.aws_security_group.alb_sg
File: \modules\security\security.tf: 96-118
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80

		96  | resource &quot;aws_security_group&quot; &quot;alb_sg&quot; {
		97  |   name        = &quot;${var.project_name}-alb-sg&quot;
		98  |   description = &quot;Permite trafico HTTP al ALB&quot;
		99  |   vpc_id      = var.vpc_id
		100 | 
		101 |   ingress {
		102 |     from_port   = 80
		103 |     to_port     = 80
		104 |     protocol    = &quot;tcp&quot;
		105 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		106 |   }
		107 | 
		108 |   egress {
		109 |     from_port   = 0
		110 |     to_port     = 0
		111 |     protocol    = &quot;-1&quot;
		112 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		113 |   }
		114 | 
		115 |   tags = {
		116 |     Name = &quot;${var.project_name}-alb-sg&quot;
		117 |   }
		118 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="\modules\vpc\vpc.tf.module.vpc.aws_subnet.public[0]" file="\modules\vpc\vpc.tf">
			<failure type="failure" message="Ensure VPC subnets do not assign public IP by default">
Resource: module.vpc.aws_subnet.public[0]
File: \modules\vpc\vpc.tf: 13-23
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default

		13 | resource &quot;aws_subnet&quot; &quot;public&quot; {
		14 |   count                   = length(var.public_subnet_cidrs)
		15 |   vpc_id                  = aws_vpc.main.id
		16 |   cidr_block              = var.public_subnet_cidrs[count.index]
		17 |   availability_zone       = var.availability_zones[count.index]
		18 |   map_public_ip_on_launch = true
		19 | 
		20 |   tags = {
		21 |     Name = &quot;${var.project_name}-public-subnet-${count.index}&quot;
		22 |   }
		23 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="\modules\vpc\vpc.tf.module.vpc.aws_subnet.public[1]" file="\modules\vpc\vpc.tf">
			<failure type="failure" message="Ensure VPC subnets do not assign public IP by default">
Resource: module.vpc.aws_subnet.public[1]
File: \modules\vpc\vpc.tf: 13-23
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default

		13 | resource &quot;aws_subnet&quot; &quot;public&quot; {
		14 |   count                   = length(var.public_subnet_cidrs)
		15 |   vpc_id                  = aws_vpc.main.id
		16 |   cidr_block              = var.public_subnet_cidrs[count.index]
		17 |   availability_zone       = var.availability_zones[count.index]
		18 |   map_public_ip_on_launch = true
		19 | 
		20 |   tags = {
		21 |     Name = &quot;${var.project_name}-public-subnet-${count.index}&quot;
		22 |   }
		23 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_20] Ensure that ALB redirects HTTP requests into HTTPS ones" classname="\elb.tf.module.alb.aws_lb.app_alb" file="\elb.tf">
			<failure type="failure" message="Ensure that ALB redirects HTTP requests into HTTPS ones">
Resource: module.alb.aws_lb.app_alb
File: \elb.tf: 1-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-redirects-http-requests-into-https-ones

		1  | resource &quot;aws_lb&quot; &quot;app_alb&quot; {
		2  |   name               = &quot;${var.project_name}-alb&quot;
		3  |   internal           = false
		4  |   load_balancer_type = &quot;application&quot;
		5  |   security_groups    = [var.alb_sg_id]
		6  |   subnets            = var.public_subnet_ids
		7  | 
		8  |   tags = {
		9  |     Name = &quot;${var.project_name}-alb&quot;
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_103] Ensure that load balancer is using at least TLS 1.2" classname="\elb.tf.module.alb.aws_lb_listener.http_listener" file="\elb.tf">
			<failure type="failure" message="Ensure that load balancer is using at least TLS 1.2">
Resource: module.alb.aws_lb_listener.http_listener
File: \elb.tf: 91-104
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-43

		91  | resource &quot;aws_lb_listener&quot; &quot;http_listener&quot; {
		92  |   load_balancer_arn = aws_lb.app_alb.arn
		93  |   port              = 80
		94  |   protocol          = &quot;HTTP&quot;
		95  | 
		96  |   default_action {
		97  |     type = &quot;fixed-response&quot;
		98  |     fixed_response {
		99  |       content_type = &quot;text/plain&quot;
		100 |       message_body = &quot;404 Not Found&quot;
		101 |       status_code  = &quot;404&quot;
		102 |     }
		103 |   }
		104 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_28] Ensure public facing ALB are protected by WAF" classname="\elb.tf.module.alb.aws_lb.app_alb" file="\elb.tf">
			<failure type="failure" message="Ensure public facing ALB are protected by WAF">
Resource: module.alb.aws_lb.app_alb
File: \elb.tf: 1-11
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-public-facing-alb-are-protected-by-waf

		1  | resource &quot;aws_lb&quot; &quot;app_alb&quot; {
		2  |   name               = &quot;${var.project_name}-alb&quot;
		3  |   internal           = false
		4  |   load_balancer_type = &quot;application&quot;
		5  |   security_groups    = [var.alb_sg_id]
		6  |   subnets            = var.public_subnet_ids
		7  | 
		8  |   tags = {
		9  |     Name = &quot;${var.project_name}-alb&quot;
		10 |   }
		11 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_42] Ensure AWS CloudFront distribution uses custom SSL certificate" classname="\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\cloudfront.tf">
			<failure type="failure" message="Ensure AWS CloudFront distribution uses custom SSL certificate">
Resource: module.cloudfront.aws_cloudfront_distribution.cdn
File: \cloudfront.tf: 22-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-cloudfront-distribution-uses-custom-ssl-certificate

		22 | resource &quot;aws_cloudfront_distribution&quot; &quot;cdn&quot; {
		23 |   enabled             = true
		24 |   is_ipv6_enabled     = true
		25 |   comment             = &quot;CDN para ${var.bucket_name}&quot;
		26 |   default_root_object = &quot;index.html&quot;
		27 | 
		28 |   origin {
		29 |     domain_name = var.bucket_domain
		30 |     origin_id   = &quot;s3-origin&quot;
		31 | 
		32 |     s3_origin_config {
		33 |       origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path
		34 |     }
		35 |   }
		36 | 
		37 |   default_cache_behavior {
		38 |     allowed_methods        = [&quot;GET&quot;, &quot;HEAD&quot;]
		39 |     cached_methods         = [&quot;GET&quot;, &quot;HEAD&quot;]
		40 |     target_origin_id       = &quot;s3-origin&quot;
		41 |     viewer_protocol_policy = &quot;redirect-to-https&quot;
		42 |     compress               = true
		43 | 
		44 |     forwarded_values {
		45 |       query_string = false
		46 |       cookies {
		47 |         forward = &quot;none&quot;
		48 |       }
		49 |     }
		50 |   }
		51 | 
		52 |   price_class = var.cf_price_class
		53 | 
		54 |   viewer_certificate {
		55 |     cloudfront_default_certificate = true
		56 |   }
		57 | 
		58 |   restrictions {
		59 |     geo_restriction {
		60 |       restriction_type = &quot;none&quot;
		61 |     }
		62 |   }
		63 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_32] Ensure CloudFront distribution has a response headers policy attached" classname="\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\cloudfront.tf">
			<failure type="failure" message="Ensure CloudFront distribution has a response headers policy attached">
Resource: module.cloudfront.aws_cloudfront_distribution.cdn
File: \cloudfront.tf: 22-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-65

		22 | resource &quot;aws_cloudfront_distribution&quot; &quot;cdn&quot; {
		23 |   enabled             = true
		24 |   is_ipv6_enabled     = true
		25 |   comment             = &quot;CDN para ${var.bucket_name}&quot;
		26 |   default_root_object = &quot;index.html&quot;
		27 | 
		28 |   origin {
		29 |     domain_name = var.bucket_domain
		30 |     origin_id   = &quot;s3-origin&quot;
		31 | 
		32 |     s3_origin_config {
		33 |       origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path
		34 |     }
		35 |   }
		36 | 
		37 |   default_cache_behavior {
		38 |     allowed_methods        = [&quot;GET&quot;, &quot;HEAD&quot;]
		39 |     cached_methods         = [&quot;GET&quot;, &quot;HEAD&quot;]
		40 |     target_origin_id       = &quot;s3-origin&quot;
		41 |     viewer_protocol_policy = &quot;redirect-to-https&quot;
		42 |     compress               = true
		43 | 
		44 |     forwarded_values {
		45 |       query_string = false
		46 |       cookies {
		47 |         forward = &quot;none&quot;
		48 |       }
		49 |     }
		50 |   }
		51 | 
		52 |   price_class = var.cf_price_class
		53 | 
		54 |   viewer_certificate {
		55 |     cloudfront_default_certificate = true
		56 |   }
		57 | 
		58 |   restrictions {
		59 |     geo_restriction {
		60 |       restriction_type = &quot;none&quot;
		61 |     }
		62 |   }
		63 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_47] Ensure AWS CloudFront attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability" classname="\cloudfront.tf.module.cloudfront.aws_cloudfront_distribution.cdn" file="\cloudfront.tf">
			<failure type="failure" message="Ensure AWS CloudFront attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability">
Resource: module.cloudfront.aws_cloudfront_distribution.cdn
File: \cloudfront.tf: 22-63
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-47

		22 | resource &quot;aws_cloudfront_distribution&quot; &quot;cdn&quot; {
		23 |   enabled             = true
		24 |   is_ipv6_enabled     = true
		25 |   comment             = &quot;CDN para ${var.bucket_name}&quot;
		26 |   default_root_object = &quot;index.html&quot;
		27 | 
		28 |   origin {
		29 |     domain_name = var.bucket_domain
		30 |     origin_id   = &quot;s3-origin&quot;
		31 | 
		32 |     s3_origin_config {
		33 |       origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path
		34 |     }
		35 |   }
		36 | 
		37 |   default_cache_behavior {
		38 |     allowed_methods        = [&quot;GET&quot;, &quot;HEAD&quot;]
		39 |     cached_methods         = [&quot;GET&quot;, &quot;HEAD&quot;]
		40 |     target_origin_id       = &quot;s3-origin&quot;
		41 |     viewer_protocol_policy = &quot;redirect-to-https&quot;
		42 |     compress               = true
		43 | 
		44 |     forwarded_values {
		45 |       query_string = false
		46 |       cookies {
		47 |         forward = &quot;none&quot;
		48 |       }
		49 |     }
		50 |   }
		51 | 
		52 |   price_class = var.cf_price_class
		53 | 
		54 |   viewer_certificate {
		55 |     cloudfront_default_certificate = true
		56 |   }
		57 | 
		58 |   restrictions {
		59 |     geo_restriction {
		60 |       restriction_type = &quot;none&quot;
		61 |     }
		62 |   }
		63 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_30] Ensure Postgres RDS as aws_db_instance has Query Logging enabled" classname="\rds.tf.module.rds.aws_db_instance.auth_db" file="\rds.tf">
			<failure type="failure" message="Ensure Postgres RDS as aws_db_instance has Query Logging enabled">
Resource: module.rds.aws_db_instance.auth_db
File: \rds.tf: 1-19
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-postgres-rds-has-query-logging-enabled

		1  | resource &quot;aws_db_instance&quot; &quot;auth_db&quot; {
		2  |   identifier         = &quot;${var.project_name}-auth-db&quot;
		3  |   engine             = &quot;postgres&quot;
		4  |   engine_version     = &quot;15&quot;
		5  |   instance_class     = var.db_instance_class
		6  |   allocated_storage  = 20
		7  |   db_name            = &quot;authdb&quot;
		8  |   username           = var.db_username
		9  |   password           = var**********
		10 |   port               = 5432
		11 |   publicly_accessible = false
		12 |   vpc_security_group_ids = [var.rds_sg_id]
		13 |   db_subnet_group_name   = var.db_subnet_group_name
		14 |   skip_final_snapshot    = true
		15 | 
		16 |   tags = {
		17 |     Name = &quot;${var.project_name}-auth-db&quot;
		18 |   }
		19 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_30] Ensure Postgres RDS as aws_db_instance has Query Logging enabled" classname="\rds.tf.module.rds.aws_db_instance.users_db" file="\rds.tf">
			<failure type="failure" message="Ensure Postgres RDS as aws_db_instance has Query Logging enabled">
Resource: module.rds.aws_db_instance.users_db
File: \rds.tf: 21-39
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-postgres-rds-has-query-logging-enabled

		21 | resource &quot;aws_db_instance&quot; &quot;users_db&quot; {
		22 |   identifier         = &quot;${var.project_name}-users-db&quot;
		23 |   engine             = &quot;postgres&quot;
		24 |   engine_version     = &quot;15&quot;
		25 |   instance_class     = var.db_instance_class
		26 |   allocated_storage  = 20
		27 |   db_name            = &quot;userdb&quot;
		28 |   username           = var.db_username
		29 |   password           = var**********
		30 |   port               = 5432
		31 |   publicly_accessible = false
		32 |   vpc_security_group_ids = [var.rds_sg_id]
		33 |   db_subnet_group_name   = var.db_subnet_group_name
		34 |   skip_final_snapshot    = true
		35 | 
		36 |   tags = {
		37 |     Name = &quot;${var.project_name}-users-db&quot;
		38 |   }
		39 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_60] Ensure RDS instance with copy tags to snapshots is enabled" classname="\rds.tf.module.rds.aws_db_instance.auth_db" file="\rds.tf">
			<failure type="failure" message="Ensure RDS instance with copy tags to snapshots is enabled">
Resource: module.rds.aws_db_instance.auth_db
File: \rds.tf: 1-19
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-2-60

		1  | resource &quot;aws_db_instance&quot; &quot;auth_db&quot; {
		2  |   identifier         = &quot;${var.project_name}-auth-db&quot;
		3  |   engine             = &quot;postgres&quot;
		4  |   engine_version     = &quot;15&quot;
		5  |   instance_class     = var.db_instance_class
		6  |   allocated_storage  = 20
		7  |   db_name            = &quot;authdb&quot;
		8  |   username           = var.db_username
		9  |   password           = var**********
		10 |   port               = 5432
		11 |   publicly_accessible = false
		12 |   vpc_security_group_ids = [var.rds_sg_id]
		13 |   db_subnet_group_name   = var.db_subnet_group_name
		14 |   skip_final_snapshot    = true
		15 | 
		16 |   tags = {
		17 |     Name = &quot;${var.project_name}-auth-db&quot;
		18 |   }
		19 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_60] Ensure RDS instance with copy tags to snapshots is enabled" classname="\rds.tf.module.rds.aws_db_instance.users_db" file="\rds.tf">
			<failure type="failure" message="Ensure RDS instance with copy tags to snapshots is enabled">
Resource: module.rds.aws_db_instance.users_db
File: \rds.tf: 21-39
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-2-60

		21 | resource &quot;aws_db_instance&quot; &quot;users_db&quot; {
		22 |   identifier         = &quot;${var.project_name}-users-db&quot;
		23 |   engine             = &quot;postgres&quot;
		24 |   engine_version     = &quot;15&quot;
		25 |   instance_class     = var.db_instance_class
		26 |   allocated_storage  = 20
		27 |   db_name            = &quot;userdb&quot;
		28 |   username           = var.db_username
		29 |   password           = var**********
		30 |   port               = 5432
		31 |   publicly_accessible = false
		32 |   vpc_security_group_ids = [var.rds_sg_id]
		33 |   db_subnet_group_name   = var.db_subnet_group_name
		34 |   skip_final_snapshot    = true
		35 | 
		36 |   tags = {
		37 |     Name = &quot;${var.project_name}-users-db&quot;
		38 |   }
		39 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="\security.tf.module.security.aws_security_group.ec2_sg" file="\security.tf">
			<failure type="failure" message="Ensure that Security Groups are attached to another resource">
Resource: module.security.aws_security_group.ec2_sg
File: \security.tf: 2-41
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		2  | resource &quot;aws_security_group&quot; &quot;ec2_sg&quot; {
		3  |   name        = &quot;${var.project_name}-ec2-sg&quot;
		4  |   description = &quot;Permite HTTP, HTTPS y Docker ports&quot;
		5  |   vpc_id      = var.vpc_id
		6  | 
		7  |   ingress {
		8  |     description = &quot;Allow HTTP&quot;
		9  |     from_port   = 80
		10 |     to_port     = 80
		11 |     protocol    = &quot;tcp&quot;
		12 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		13 |   }
		14 | 
		15 |   ingress {
		16 |     description = &quot;Allow HTTPS&quot;
		17 |     from_port   = 443
		18 |     to_port     = 443
		19 |     protocol    = &quot;tcp&quot;
		20 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		21 |   }
		22 | 
		23 |   ingress {
		24 |     description = &quot;Docker Compose servicios expuestos&quot;
		25 |     from_port   = 3000
		26 |     to_port     = 3999
		27 |     protocol    = &quot;tcp&quot;
		28 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		29 |   }
		30 | 
		31 |   egress {
		32 |     from_port   = 0
		33 |     to_port     = 0
		34 |     protocol    = &quot;-1&quot;
		35 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		36 |   }
		37 | 
		38 |   tags = {
		39 |     Name = &quot;${var.project_name}-ec2-sg&quot;
		40 |   }
		41 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="\security.tf.module.security.aws_security_group.rds_sg" file="\security.tf">
			<failure type="failure" message="Ensure that Security Groups are attached to another resource">
Resource: module.security.aws_security_group.rds_sg
File: \security.tf: 44-67
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		44 | resource &quot;aws_security_group&quot; &quot;rds_sg&quot; {
		45 |   name        = &quot;${var.project_name}-rds-sg&quot;
		46 |   description = &quot;Permite acceder a la DB por el EC2&quot;
		47 |   vpc_id      = var.vpc_id
		48 | 
		49 |   ingress {
		50 |     description = &quot;PostgreSQL&quot;
		51 |     from_port   = 5432
		52 |     to_port     = 5432
		53 |     protocol    = &quot;tcp&quot;
		54 |     security_groups = [aws_security_group.ec2_sg.id] # Only EC2 instances
		55 |   }
		56 | 
		57 |   egress {
		58 |     from_port   = 0
		59 |     to_port     = 0
		60 |     protocol    = &quot;-1&quot;
		61 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		62 |   }
		63 | 
		64 |   tags = {
		65 |     Name = &quot;${var.project_name}-rds-sg&quot;
		66 |   }
		67 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="\security.tf.module.security.aws_security_group.ssh_sg" file="\security.tf">
			<failure type="failure" message="Ensure that Security Groups are attached to another resource">
Resource: module.security.aws_security_group.ssh_sg
File: \security.tf: 70-93
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		70 | resource &quot;aws_security_group&quot; &quot;ssh_sg&quot; {
		71 |   name        = &quot;${var.project_name}-ssh-sg&quot;
		72 |   description = &quot;Permite conexion SSH con tu IP&quot;
		73 |   vpc_id      = var.vpc_id
		74 | 
		75 |   ingress {
		76 |     description = &quot;SSH&quot;
		77 |     from_port   = 22
		78 |     to_port     = 22
		79 |     protocol    = &quot;tcp&quot;
		80 |     cidr_blocks = [var.user_ip_cidr] # Ip de la persona que quiera usar la conexión SSH
		81 |   }
		82 | 
		83 |   egress {
		84 |     from_port   = 0
		85 |     to_port     = 0
		86 |     protocol    = &quot;-1&quot;
		87 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		88 |   }
		89 | 
		90 |   tags = {
		91 |     Name = &quot;${var.project_name}-ssh-sg&quot;
		92 |   }
		93 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="\security.tf.module.security.aws_security_group.alb_sg" file="\security.tf">
			<failure type="failure" message="Ensure that Security Groups are attached to another resource">
Resource: module.security.aws_security_group.alb_sg
File: \security.tf: 96-118
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		96  | resource &quot;aws_security_group&quot; &quot;alb_sg&quot; {
		97  |   name        = &quot;${var.project_name}-alb-sg&quot;
		98  |   description = &quot;Permite trafico HTTP al ALB&quot;
		99  |   vpc_id      = var.vpc_id
		100 | 
		101 |   ingress {
		102 |     from_port   = 80
		103 |     to_port     = 80
		104 |     protocol    = &quot;tcp&quot;
		105 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		106 |   }
		107 | 
		108 |   egress {
		109 |     from_port   = 0
		110 |     to_port     = 0
		111 |     protocol    = &quot;-1&quot;
		112 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		113 |   }
		114 | 
		115 |   tags = {
		116 |     Name = &quot;${var.project_name}-alb-sg&quot;
		117 |   }
		118 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_11] Ensure VPC flow logging is enabled in all VPCs" classname="\vpc.tf.module.vpc.aws_vpc.main" file="\vpc.tf">
			<failure type="failure" message="Ensure VPC flow logging is enabled in all VPCs">
Resource: module.vpc.aws_vpc.main
File: \vpc.tf: 2-10
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-9-enable-vpc-flow-logging

		2  | resource &quot;aws_vpc&quot; &quot;main&quot; {
		3  |   cidr_block           = var.vpc_cidr
		4  |   enable_dns_support   = true
		5  |   enable_dns_hostnames = true
		6  | 
		7  |   tags = {
		8  |     Name = &quot;${var.project_name}-vpc&quot;
		9  |   }
		10 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_12] Ensure the default security group of every VPC restricts all traffic" classname="\vpc.tf.module.vpc.aws_vpc.main" file="\vpc.tf">
			<failure type="failure" message="Ensure the default security group of every VPC restricts all traffic">
Resource: module.vpc.aws_vpc.main
File: \vpc.tf: 2-10
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-4

		2  | resource &quot;aws_vpc&quot; &quot;main&quot; {
		3  |   cidr_block           = var.vpc_cidr
		4  |   enable_dns_support   = true
		5  |   enable_dns_hostnames = true
		6  | 
		7  |   tags = {
		8  |     Name = &quot;${var.project_name}-vpc&quot;
		9  |   }
		10 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_144] Ensure that S3 bucket has cross-region replication enabled" classname="\s3.tf.module.s3.aws_s3_bucket.frontend" file="\s3.tf">
			<failure type="failure" message="Ensure that S3 bucket has cross-region replication enabled">
Resource: module.s3.aws_s3_bucket.frontend
File: \s3.tf: 5-46
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled

		5  | resource &quot;aws_s3_bucket&quot; &quot;frontend&quot; {
		6  |   bucket = &quot;${lower(var.project_name)}-${var.environment}-${coalesce(var.bucket_suffix, random_id.bucket_suffix.hex)}&quot;
		7  | 
		8  |   tags = {
		9  |     Name        = &quot;${var.project_name}-frontend&quot;
		10 |     Environment = var.environment
		11 |   }
		12 | 
		13 |   lifecycle {
		14 |     ignore_changes = [bucket]
		15 |   }
		16 | 
		17 |   # ✔ CKV_AWS_20 &amp; CKV_AWS_57: Evita ACLs públicas
		18 |   acl = &quot;private&quot;
		19 | 
		20 |   # ✔ CKV_AWS_21: Habilita versionado
		21 |   versioning {
		22 |     enabled = true
		23 |   }
		24 | 
		25 |   # ✔ CKV_AWS_18: Habilita access logging
		26 |   logging {
		27 |     target_bucket = aws_s3_bucket.frontend_logs.id
		28 |     target_prefix = &quot;access-logs/&quot;
		29 |   }
		30 | 
		31 |   # ✔ CKV_AWS_144: Configura replicación cross‑region
		32 |   replication_configuration {
		33 |     role = aws_iam_role.replication_role.arn
		34 | 
		35 |     rule {
		36 |       id     = &quot;cross-region&quot;
		37 |       status = &quot;Enabled&quot;
		38 |       prefix = &quot;&quot;
		39 | 
		40 |       destination {
		41 |         bucket        = aws_s3_bucket.frontend_replica.arn
		42 |         storage_class = &quot;STANDARD&quot;
		43 |       }
		44 |     }
		45 |   }
		46 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_378] Ensure AWS Load Balancer doesn't use HTTP protocol" classname="\elb.tf.module.alb.aws_lb_target_group.tg" file="\elb.tf">
			<failure type="failure" message="Ensure AWS Load Balancer doesn't use HTTP protocol">
Resource: module.alb.aws_lb_target_group.tg
File: \elb.tf: 13-31
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-378

		13 | resource &quot;aws_lb_target_group&quot; &quot;tg&quot; {
		14 |   name     = &quot;${var.project_name}-tg&quot;
		15 |   port     = 80
		16 |   protocol = &quot;HTTP&quot;
		17 |   vpc_id   = var.vpc_id
		18 | 
		19 |   health_check {
		20 |     path                = &quot;/&quot;
		21 |     interval            = 30
		22 |     timeout             = 5
		23 |     healthy_threshold   = 2
		24 |     unhealthy_threshold = 2
		25 |     matcher             = &quot;200&quot;
		26 |   }
		27 | 
		28 |   tags = {
		29 |     Name = &quot;${var.project_name}-tg&quot;
		30 |   }
		31 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_378] Ensure AWS Load Balancer doesn't use HTTP protocol" classname="\elb.tf.module.alb.aws_lb_target_group.tg_auth" file="\elb.tf">
			<failure type="failure" message="Ensure AWS Load Balancer doesn't use HTTP protocol">
Resource: module.alb.aws_lb_target_group.tg_auth
File: \elb.tf: 42-56
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-378

		42 | resource &quot;aws_lb_target_group&quot; &quot;tg_auth&quot; {
		43 |   name     = &quot;${var.project_name}-tg-auth&quot;
		44 |   port     = 8091
		45 |   protocol = &quot;HTTP&quot;
		46 |   vpc_id   = var.vpc_id
		47 | 
		48 |   health_check {
		49 |     path                = &quot;/&quot;
		50 |     interval            = 30
		51 |     timeout             = 5
		52 |     healthy_threshold   = 2
		53 |     unhealthy_threshold = 2
		54 |     matcher             = &quot;200&quot;
		55 |   }
		56 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_378] Ensure AWS Load Balancer doesn't use HTTP protocol" classname="\elb.tf.module.alb.aws_lb_target_group.tg_user" file="\elb.tf">
			<failure type="failure" message="Ensure AWS Load Balancer doesn't use HTTP protocol">
Resource: module.alb.aws_lb_target_group.tg_user
File: \elb.tf: 58-72
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-378

		58 | resource &quot;aws_lb_target_group&quot; &quot;tg_user&quot; {
		59 |   name     = &quot;${var.project_name}-tg-user&quot;
		60 |   port     = 8092
		61 |   protocol = &quot;HTTP&quot;
		62 |   vpc_id   = var.vpc_id
		63 | 
		64 |   health_check {
		65 |     path                = &quot;/&quot;
		66 |     interval            = 30
		67 |     timeout             = 5
		68 |     healthy_threshold   = 2
		69 |     unhealthy_threshold = 2
		70 |     matcher             = &quot;200&quot;
		71 |   }
		72 | }
</failure>
		</testcase>
	</testsuite>
</testsuites>
